# re-deploy 2023-10-22
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ksa-ta-frontend
  annotations:
    iam.gke.io/gcp-service-account: gsa-ta-frontend@ta-project-and-dot.iam.gserviceaccount.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: namespace
  name: ta-frontend
  labels:
    app: ta-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ta-frontend
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: ta-frontend
    spec:
      # imagePullSecrets:
      #   - name: dockerhub # for onpremise
      serviceAccountName: ksa-ta-frontend
      containers:
        - name: ta-frontend
          image: image
          command: ["node"]
          args: ["server.js"]
          resources:
            requests:
              cpu: 100m
              memory: 450Mi
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: 3000
          env:
            - name: TENANT_PREFIX
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: TENANT_PREFIX

            - name: DEFAULT_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: DEFAULT_TENANT_ID

            - name: DEFAULT_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: DEFAULT_ADMIN_EMAIL

            - name: MULTIMODAL_GCS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: MULTIMODAL_GCS_BUCKET_NAME

            - name: BACKEND_ML_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: BACKEND_ML_ENDPOINT

            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: POSTGRES_DB

            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: POSTGRES_USER

            - name: POSTGRES_APP_USER
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: POSTGRES_APP_USER

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: POSTGRES_PASSWORD

            - name: DATABASE_ROOT_URL
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: DATABASE_ROOT_URL

            - name: DATABASE_APP_URL
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: DATABASE_APP_URL

            - name: AUTH0_SECRET
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: AUTH0_SECRET

            - name: APP_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: APP_BASE_URL

            - name: AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: AUTH0_DOMAIN

            - name: AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: AUTH0_CLIENT_ID

            - name: AUTH0_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: AUTH0_CLIENT_SECRET

            - name: SENDGRID_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: SENDGRID_API_SECRET

            # Slack API関連
            - name: SLACK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: SLACK_CLIENT_ID

            - name: SLACK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: SLACK_CLIENT_SECRET

            - name: GOOGLE_DRIVE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: GOOGLE_DRIVE_CLIENT_ID

            - name: GOOGLE_DRIVE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: GOOGLE_DRIVE_CLIENT_SECRET

            - name: GEMINI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ta-envs-frontend
                  key: GEMINI_API_KEY

        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL Auth Proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.6.1
          args:
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            - "--private-ip"

            # Enable structured logging with LogEntry format:
            - "--structured-logs"

            # Replace DB_PORT with the port the proxy should listen on
            - "--port=$(DB_PORT)"
            - "$(INSTANCE_CONNECTION_NAME)"

          envFrom:
            - secretRef:
                name: ta-envs-frontend

          securityContext:
            # The default Cloud SQL Auth Proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
            # You should use resource requests/limits as a best practice to prevent
            # pods from consuming too many resources and affecting the execution of
            # other pods. You should adjust the following values based on what your
            # application needs. For details, see
            # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
            # resources:
            #   requests:
            #     # The proxy's memory use scales linearly with the number of active
            #     # connections. Fewer open connections will use less memory. Adjust
            #     # this value based on your application's requirements.
            #     memory: "2Gi"
            #     # The proxy's CPU use scales linearly with the amount of IO between
            #     # the database and the application. Adjust this value based on your
            #     # application's requirements.
            #     cpu: "1"
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: ta-frontend
spec:
  timeoutSec: 300 # ChatGPT-Proxyレスポンスが30秒以上かかるので、タイムアウトを300秒に設定
  healthCheck:
    requestPath: /healthcheck
    port: 3000
  securityPolicy:
    name: xxx-app-security-policy
---
apiVersion: v1
kind: Service
metadata:
  namespace: namespace
  name: ta-frontend-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "ta-frontend"}'
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    app: ta-frontend
